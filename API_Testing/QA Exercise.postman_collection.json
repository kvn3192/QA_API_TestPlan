{
	"info": {
		"_postman_id": "6cb63d64-cfac-42d3-91f3-5592e0e7291a",
		"name": "QA Exercise",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34839127"
	},
	"item": [
		{
			"name": "Happy flow: Get a user that exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Verify that the data received has the correct id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.id).to.eql(pm.collectionVariables.get(\"id\"));\r",
							"});\r",
							"\r",
							"// Defining the schema for the user in the response\r",
							"var user_schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"required\": [\r",
							"        \"data\",\r",
							"        \"support\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"data\": {\r",
							"            \"type\": \"object\",\r",
							"            \"required\": [\r",
							"                \"id\",\r",
							"                \"email\",\r",
							"                \"first_name\",\r",
							"                \"last_name\",\r",
							"                \"avatar\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"id\": {\r",
							"                    \"type\": \"number\"\r",
							"                },\r",
							"                \"email\": {\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"first_name\": {\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"last_name\": {\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"avatar\": {\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            },\r",
							"            \"examples\": [{\r",
							"                \"id\": 1,\r",
							"                \"email\": \"george.bluth@reqres.in\",\r",
							"                \"first_name\": \"George\",\r",
							"                \"last_name\": \"Bluth\",\r",
							"                \"avatar\": \"https://reqres.in/img/faces/1-image.jpg\"\r",
							"            }]\r",
							"        },\r",
							"        \"support\": {\r",
							"            \"type\": \"object\",\r",
							"            \"required\": [\r",
							"                \"url\",\r",
							"                \"text\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"url\": {\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"text\": {\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            },\r",
							"            \"examples\": [{\r",
							"                \"url\": \"https://reqres.in/#support-heading\",\r",
							"                \"text\": \"To keep ReqRes free, contributions towards server costs are appreciated!\"\r",
							"            }]\r",
							"        }\r",
							"    },\r",
							"    \"examples\": [{\r",
							"        \"data\": {\r",
							"            \"id\": 1,\r",
							"            \"email\": \"george.bluth@reqres.in\",\r",
							"            \"first_name\": \"George\",\r",
							"            \"last_name\": \"Bluth\",\r",
							"            \"avatar\": \"https://reqres.in/img/faces/1-image.jpg\"\r",
							"        },\r",
							"        \"support\": {\r",
							"            \"url\": \"https://reqres.in/#support-heading\",\r",
							"            \"text\": \"To keep ReqRes free, contributions towards server costs are appreciated!\"\r",
							"        }\r",
							"    }]\r",
							"};\r",
							"\r",
							"pm.test('Validate that the response has the correct schema', function () {\r",
							"  pm.response.to.have.jsonSchema(user_schema);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"id\", 1);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/{{id}}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Negative test: Try to get a user that doesn't exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that the status match with User doesn't exist. Not found 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Verify that the body is empty when user is not found\", function () {\r",
							"    pm.expect(pm.response.body).is.undefined;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/23",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "Happy flow: Create an account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that the status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Defining the schema for the account in the response\r",
							"var account_schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"required\": [\r",
							"        \"id\",\r",
							"        \"token\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"id\": {\r",
							"            \"type\": \"integer\",\r",
							"            \"examples\": [\r",
							"                4\r",
							"            ]\r",
							"        },\r",
							"        \"token\": {\r",
							"            \"type\": \"string\",\r",
							"            \"examples\": [\r",
							"                \"QpwL5tke4Pnpja7X4\"\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"examples\": [{\r",
							"        \"id\": 4,\r",
							"        \"token\": \"QpwL5tke4Pnpja7X4\"\r",
							"    }]\r",
							"};\r",
							"\r",
							"pm.test('Validate that the response has the correct schema', function () {\r",
							"  pm.response.to.have.jsonSchema(account_schema);\r",
							"});\r",
							"\r",
							"// Saving the token as a collection variable\r",
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"token\", jsonData.token);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/register",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Negative test: Create an account with invalid user data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that the status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the error message for invalid user is shown\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Note: Only defined users succeed registration\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"kevin@test.com\",\r\n    \"password\": \"pistol\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/register",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Negative test: Create an account without user info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that the status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the error message for missing user info is shown\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Missing email or username\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/register",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Negative test: Create an account without password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that the status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the error message for missing user info is shown\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Missing password\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/register",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that the status is the correct 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/{{id}}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that the status is the correct 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/{{id}}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "id",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		}
	]
}